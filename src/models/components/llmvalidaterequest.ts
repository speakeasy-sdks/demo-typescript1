/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type LLMValidateRequest = {
    prompt?: string | null | undefined;
    response?: string | null | undefined;
    id?: string | null | undefined;
    datasetId: string;
    timestamp?: number | undefined;
};

/** @internal */
export namespace LLMValidateRequest$ {
    export type Inbound = {
        prompt?: string | null | undefined;
        response?: string | null | undefined;
        id?: string | null | undefined;
        datasetId: string;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<LLMValidateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            prompt: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            id: z.nullable(z.string()).optional(),
            datasetId: z.string(),
            timestamp: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.prompt === undefined ? null : { prompt: v.prompt }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.id === undefined ? null : { id: v.id }),
                datasetId: v.datasetId,
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        prompt?: string | null | undefined;
        response?: string | null | undefined;
        id?: string | null | undefined;
        datasetId: string;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LLMValidateRequest> = z
        .object({
            prompt: z.nullable(z.string()).optional(),
            response: z.nullable(z.string()).optional(),
            id: z.nullable(z.string()).optional(),
            datasetId: z.string(),
            timestamp: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.prompt === undefined ? null : { prompt: v.prompt }),
                ...(v.response === undefined ? null : { response: v.response }),
                ...(v.id === undefined ? null : { id: v.id }),
                datasetId: v.datasetId,
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}
