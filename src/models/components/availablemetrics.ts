/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type AvailableMetrics = {
    metricsNames: Array<string>;
};

/** @internal */
export namespace AvailableMetrics$ {
    export type Inbound = {
        metrics_names: Array<string>;
    };

    export const inboundSchema: z.ZodType<AvailableMetrics, z.ZodTypeDef, Inbound> = z
        .object({
            metrics_names: z.array(z.string()),
        })
        .transform((v) => {
            return {
                metricsNames: v.metrics_names,
            };
        });

    export type Outbound = {
        metrics_names: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AvailableMetrics> = z
        .object({
            metricsNames: z.array(z.string()),
        })
        .transform((v) => {
            return {
                metrics_names: v.metricsNames,
            };
        });
}
