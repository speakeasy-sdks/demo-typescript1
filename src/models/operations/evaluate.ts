/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import { z } from "zod";

export type EvaluateRequest = {
    log?: boolean | undefined;
    perfInfo?: boolean | undefined;
    llmValidateRequest: components.LLMValidateRequest;
};

export type EvaluateResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful Response
     */
    evaluationResult?: components.EvaluationResult | undefined;
};

/** @internal */
export namespace EvaluateRequest$ {
    export type Inbound = {
        log?: boolean | undefined;
        perf_info?: boolean | undefined;
        LLMValidateRequest: components.LLMValidateRequest$.Inbound;
    };

    export const inboundSchema: z.ZodType<EvaluateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            log: z.boolean().default(true),
            perf_info: z.boolean().default(false),
            LLMValidateRequest: components.LLMValidateRequest$.inboundSchema,
        })
        .transform((v) => {
            return {
                log: v.log,
                perfInfo: v.perf_info,
                llmValidateRequest: v.LLMValidateRequest,
            };
        });

    export type Outbound = {
        log: boolean;
        perf_info: boolean;
        LLMValidateRequest: components.LLMValidateRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EvaluateRequest> = z
        .object({
            log: z.boolean().default(true),
            perfInfo: z.boolean().default(false),
            llmValidateRequest: components.LLMValidateRequest$.outboundSchema,
        })
        .transform((v) => {
            return {
                log: v.log,
                perf_info: v.perfInfo,
                LLMValidateRequest: v.llmValidateRequest,
            };
        });
}

/** @internal */
export namespace EvaluateResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        EvaluationResult?: components.EvaluationResult$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<EvaluateResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            EvaluationResult: components.EvaluationResult$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.EvaluationResult === undefined
                    ? null
                    : { evaluationResult: v.EvaluationResult }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        EvaluationResult?: components.EvaluationResult$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EvaluateResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            evaluationResult: components.EvaluationResult$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.evaluationResult === undefined
                    ? null
                    : { EvaluationResult: v.evaluationResult }),
            };
        });
}
