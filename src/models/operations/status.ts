/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as z from "zod";

export type StatusResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful Response
     */
    processLoggerStatusResponse?: components.ProcessLoggerStatusResponse | undefined;
};

/** @internal */
export namespace StatusResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ProcessLoggerStatusResponse?: components.ProcessLoggerStatusResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<StatusResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ProcessLoggerStatusResponse:
                components.ProcessLoggerStatusResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ProcessLoggerStatusResponse === undefined
                    ? null
                    : { processLoggerStatusResponse: v.ProcessLoggerStatusResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ProcessLoggerStatusResponse?: components.ProcessLoggerStatusResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StatusResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            processLoggerStatusResponse:
                components.ProcessLoggerStatusResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.processLoggerStatusResponse === undefined
                    ? null
                    : { ProcessLoggerStatusResponse: v.processLoggerStatusResponse }),
            };
        });
}
