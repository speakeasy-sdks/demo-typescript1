/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as errors from "../../models/errors";
import * as z from "zod";

export type ValidateLlmRequest = {
    log?: boolean | undefined;
    llmValidateRequest: components.LLMValidateRequest;
};

export type ValidateLlmResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful Response
     */
    validationResult?: errors.ValidationResult | undefined;
};

/** @internal */
export namespace ValidateLlmRequest$ {
    export type Inbound = {
        log?: boolean | undefined;
        LLMValidateRequest: components.LLMValidateRequest$.Inbound;
    };

    export const inboundSchema: z.ZodType<ValidateLlmRequest, z.ZodTypeDef, Inbound> = z
        .object({
            log: z.boolean().default(true),
            LLMValidateRequest: components.LLMValidateRequest$.inboundSchema,
        })
        .transform((v) => {
            return {
                log: v.log,
                llmValidateRequest: v.LLMValidateRequest,
            };
        });

    export type Outbound = {
        log: boolean;
        LLMValidateRequest: components.LLMValidateRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ValidateLlmRequest> = z
        .object({
            log: z.boolean().default(true),
            llmValidateRequest: components.LLMValidateRequest$.outboundSchema,
        })
        .transform((v) => {
            return {
                log: v.log,
                LLMValidateRequest: v.llmValidateRequest,
            };
        });
}

/** @internal */
export namespace ValidateLlmResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ValidationResult?: errors.ValidationResult$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<ValidateLlmResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ValidationResult: errors.ValidationResult$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ValidationResult === undefined
                    ? null
                    : { validationResult: v.ValidationResult }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ValidationResult?: errors.ValidationResult$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ValidateLlmResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            validationResult: errors.ValidationResult$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.validationResult === undefined
                    ? null
                    : { ValidationResult: v.validationResult }),
            };
        });
}
